{"version":3,"file":"static/js/424.16e98e29.chunk.js","mappings":"8PACA,EAA4B,oCAA5B,EAA2E,mCAA3E,EAAwH,kCAAxH,EAAyK,uCAAzK,EAAiO,yCAAjO,EAA8R,4CAA9R,EAAwV,sCAAxV,EAA4Y,sCAA5Y,EAAqc,2CAArc,EAAkgB,0C,SC4ElgB,EArEyB,WAAO,IAAD,IACrBA,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMR,GAAN,wFACGS,EAAAA,EAAAA,IAAgBT,GADnB,OACVU,EADU,OAEhBJ,EAAaI,GAFG,2CAAH,sDAIfF,EAAUR,EACX,GAAE,CAACA,IAEJ,IAAMW,EAAY,oBAAGT,EAASU,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,GAAKR,EAAL,CAGA,IACES,EAOET,EAPFS,OACAC,EAMEV,EANFU,MACAC,EAKEX,EALFW,KACAC,EAIEZ,EAJFY,OACAC,EAGEb,EAHFa,QACAC,EAEEd,EAFFc,OANF,EAQId,EADFe,KAAAA,OAPF,MAOS,UAPT,EAUA,OACE,2BACE,iBAAKC,UAAWC,EAAhB,WACE,UAAC,KAAD,CAASD,UAAWC,EAAcC,GAAIZ,EAAtC,WACE,SAAC,MAAD,CAAaa,KAAM,MACnB,0CAEF,iBAAKH,UAAWC,EAAhB,WACE,gBAAKG,IAAKV,EAAOW,IAAKV,EAAMK,UAAWC,KACvC,eAAID,UAAWC,EAAf,SAAoCN,KACpC,eAAIK,UAAWC,EAAf,2BACA,gBAAID,UAAWC,EAAf,WACE,gBAAID,UAAWC,EAAf,WACE,iBAAMD,UAAWC,EAAjB,qBACA,iBAAMD,UAAWC,EAAjB,SAAuCR,QAEzC,gBAAIO,UAAWC,EAAf,WACE,iBAAMD,UAAWC,EAAjB,qBACA,iBAAMD,UAAWC,EAAjB,SAAuCH,QAEzC,gBAAIE,UAAWC,EAAf,WACE,iBAAMD,UAAWC,EAAjB,qBACA,iBAAMD,UAAWC,EAAjB,SAAuCJ,QAEzC,gBAAIG,UAAWC,EAAf,WACE,iBAAMD,UAAWC,EAAjB,qBACA,iBAAMD,UAAWC,EAAjB,SAAuCL,EAAOD,WAEhD,gBAAIK,UAAWC,EAAf,WACE,iBAAMD,UAAWC,EAAjB,mBACA,iBAAMD,UAAWC,EAAjB,SACGF,EAAKO,OAASP,EAAO,yBA1CnC,CAkDF,C,mJCvEDQ,EAAAA,EAAAA,SAAAA,QAAA,UAFiB,mCAIjB,IAAMC,EAAgB,mCAAG,6GAEHD,EAAAA,EAAAA,IAAU,cAFP,cAEfE,EAFe,yBAGdA,EAAIpB,MAHU,gCAKrBqB,QAAQC,IAAR,MALqB,yDAAH,qDAShBvB,EAAe,mCAAG,WAAMT,GAAN,gGAEF4B,EAAAA,EAAAA,IAAA,qBAAwB5B,IAFtB,cAEd8B,EAFc,yBAGbA,EAAIpB,MAHS,gCAKpBqB,QAAQC,IAAR,MALoB,yDAAH,sDASfC,EAAkB,mCAAG,WAAMjB,GAAN,gGAELY,EAAAA,EAAAA,IAAU,cAAe,CACzCM,OAAQ,CAAElB,KAAAA,KAHW,cAEjBc,EAFiB,yBAKhBA,EAAIpB,MALY,gCAOvBqB,QAAQC,IAAR,MAPuB,yDAAH,qD","sources":["webpack://rick-and-morty/./src/pages/CharacterDetails/CharacterDetails.module.css?2da4","pages/CharacterDetails/index.jsx","services/rick&mortyAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CharacterDetails_container__RvmVJ\",\"backLink\":\"CharacterDetails_backLink__ZCeXY\",\"details\":\"CharacterDetails_details__dDduG\",\"detailsImage\":\"CharacterDetails_detailsImage__dXw5-\",\"detailsHeading\":\"CharacterDetails_detailsHeading__AHU1D\",\"detailsSubheading\":\"CharacterDetails_detailsSubheading__h6yIn\",\"detailsList\":\"CharacterDetails_detailsList__1MTyA\",\"detailsItem\":\"CharacterDetails_detailsItem__Tz3m4\",\"detailsItemLabel\":\"CharacterDetails_detailsItemLabel__uAPmN\",\"detailsItemName\":\"CharacterDetails_detailsItemName__5HMvG\"};","import { useState, useEffect } from 'react';\nimport { NavLink, useLocation, useParams } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\n\nimport { getOneCharacter } from 'services/rick&mortyAPI';\n\nimport css from './CharacterDetails.module.css';\n\nconst CharacterDetails = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const [character, setCharacter] = useState(null);\n\n  useEffect(() => {\n    const getResult = async id => {\n      const data = await getOneCharacter(id);\n      setCharacter(data);\n    };\n    getResult(id);\n  }, [id]);\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  if (!character) {\n    return;\n  }\n  const {\n    gender,\n    image,\n    name,\n    origin,\n    species,\n    status,\n    type = 'Unknown',\n  } = character;\n\n  return (\n    <main>\n      <div className={css.container}>\n        <NavLink className={css.backLink} to={backLinkHref}>\n          <FiArrowLeft size={24} />\n          <span>Go back</span>\n        </NavLink>\n        <div className={css.details}>\n          <img src={image} alt={name} className={css.detailsImage} />\n          <h1 className={css.detailsHeading}>{name}</h1>\n          <h2 className={css.detailsSubheading}>Informations</h2>\n          <ul className={css.detailsList}>\n            <li className={css.detailsItem}>\n              <span className={css.detailsItemLabel}>Gender</span>\n              <span className={css.detailsItemName}>{gender}</span>\n            </li>\n            <li className={css.detailsItem}>\n              <span className={css.detailsItemLabel}>Status</span>\n              <span className={css.detailsItemName}>{status}</span>\n            </li>\n            <li className={css.detailsItem}>\n              <span className={css.detailsItemLabel}>Specie</span>\n              <span className={css.detailsItemName}>{species}</span>\n            </li>\n            <li className={css.detailsItem}>\n              <span className={css.detailsItemLabel}>Origin</span>\n              <span className={css.detailsItemName}>{origin.name}</span>\n            </li>\n            <li className={css.detailsItem}>\n              <span className={css.detailsItemLabel}>Type</span>\n              <span className={css.detailsItemName}>\n                {type.length ? type : 'Unknown'}\n              </span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default CharacterDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://rickandmortyapi.com/api';\n\naxios.defaults.baseURL = `${BASE_URL}`;\n\nconst getAllCharacters = async () => {\n  try {\n    const res = await axios.get('/character');\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getOneCharacter = async id => {\n  try {\n    const res = await axios.get(`/character/${id}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getCharacterByName = async name => {\n  try {\n    const res = await axios.get('/character/', {\n      params: { name },\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport { getAllCharacters, getOneCharacter, getCharacterByName };\n"],"names":["id","useParams","location","useLocation","useState","character","setCharacter","useEffect","getResult","getOneCharacter","data","backLinkHref","state","from","gender","image","name","origin","species","status","type","className","css","to","size","src","alt","length","axios","getAllCharacters","res","console","log","getCharacterByName","params"],"sourceRoot":""}